!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module etpred ! in 
    interface  ! in :etpred
        module params ! in :etpred:etpred.f90
            character(len=10) :: nullfile
            character(len=256) :: comdir
            integer, parameter,optional :: stdin_bn=5
            integer, parameter,optional :: stdout_bn=6
            integer, parameter,optional :: stderr_bn=0
            integer, parameter,optional :: void_bn=11
            integer :: ic2
            character(len=17), parameter,optional :: cfprn='pygtide.out.prn'
            character(len=17), parameter,optional :: cfout='pygtide.out.prd'
            character(len=17), parameter,optional :: etddtdat='etddt.dat'
            character(len=17), parameter,optional :: etpolutdat='etpolut1.dat'
            character(len=17), parameter,optional :: etpolutbin='etpolut1.bin'
            real(kind=8), parameter,optional :: dpi=3.141592653589793d0
            real(kind=8), parameter,optional,depend(dpi) :: dpi2=8
            real(kind=8), parameter,optional,depend(dpi) :: drad=0.022222222222222223
            real(kind=8), parameter,optional,depend(dpi) :: dro=45.0
            character(len=20), optional,dimension(8) :: cmodel=(/'doodson 1921        ','cted 1973           ','buellesfeld 1985    ','tamura 1987         ','xi 1989             ','roosbeek 1995       ','hartmann+wenzel 1995','kudryavtsev 2004    '/)
            character(len=12), optional,dimension(8) :: cffile=(/'doodsehw.dat', 'cted73hw.dat', 'buellehw.dat','tamurahw.dat', 'xi1989hw.dat', 'ratgp95.dat ', 'hw95s.dat   ', 'ksm03.dat   '/)
            character(len=12), optional,dimension(8) :: cufile=(/'doodsehw.bin', 'cted73hw.bin', 'buellehw.bin', 'tamurahw.bin','xi1989hw.bin', 'ratgp95.bin ', 'hw95s.bin   ', 'ksm03.bin   '/)
            character(len=8), optional,dimension(11) :: cunit=(/'(m/s)**2','nm/s**2 ',' mas    ',' mm     ',' mm     ',' nstr   ',' nstr   ',' nstr   ',' nstr   ',' nstr   ',' mm     '/)
            character(len=10), optional,dimension(4) :: channel=(/'signal    ','tide      ','pole tide ','lod tide  '/)
            character(len=24), optional,dimension(11) :: compon=(/'potential               ', 'gravity                 ','tilt                    ','vertical displacement   ','horizontal displacement ','vertical strain         ','horizontal strain       ','aereal strain           ','shear  strain           ','volume strain           ','ocean tide              '/)
            integer, parameter,optional :: c88=88888888
            integer, parameter,optional :: c99=99999999
            character(len=10), parameter,optional :: cendt='c*********'
        end module params
        module max_pars ! in :etpred:etpred.f90
            integer, parameter,optional :: maxwg=85
            integer, parameter,optional :: maxnw=30000
        end module max_pars
        module ddt_mod ! in :etpred:etpred.f90
            real(kind=8) dimension(3,500) :: ddttab
            integer :: nddtab
        end module ddt_mod
        module controlmod ! in :etpred:etpred.f90
            use max_pars
            integer :: ngr
            real(kind=8) dimension(85) :: dfra
            real(kind=8) dimension(85) :: dfre
            real(kind=8) dimension(85) :: dg0
            real(kind=8) dimension(85) :: dphi0
            real(kind=8) dimension(85) :: na
            real(kind=8) dimension(85) :: ne
            real(kind=8) dimension(85) :: dam
            real(kind=8) dimension(85) :: dbod
            real(kind=8) :: dlat
            real(kind=8) :: dlon
            real(kind=8) :: dh
            real(kind=8) :: dgrav
            real(kind=8) :: daz
            real(kind=8) :: datlim
            real(kind=8) :: damin
            real(kind=8) :: dpoltc
            real(kind=8) :: dlodtc
            integer :: idtsec
            character*10 :: cinst
            character*64 dimension(10) :: chead
            integer :: ic
            integer :: ir
            integer :: ity
            integer :: itm
            integer :: itd
            integer :: ith
            integer :: ida
            integer :: imodel
            integer :: iprobs
            integer :: ispanh
            real(kind=16) :: kfilt
            real(kind=16) :: iprlf
            real(kind=16) :: irigid
            real(kind=16) :: ihann
            real(kind=16) :: iquick
            real(kind=16) :: nf
        end module controlmod
        module tidphas ! in :etpred:etpred.f90
            real(kind=8) dimension(25) :: dpk
        end module tidphas
        module tidwave ! in :etpred:etpred.f90
            use max_pars
            integer :: nw
            integer dimension(30000) :: iwnr
            integer dimension(30000,12) :: iaarg
            real(kind=8) dimension(30000) :: dx0
            real(kind=8) dimension(30000) :: dx1
            real(kind=8) dimension(30000) :: dx2
            real(kind=8) dimension(30000) :: dy0
            real(kind=8) dimension(30000) :: dy1
            real(kind=8) dimension(30000) :: dy2
            real(kind=8) dimension(30000) :: dthph
            real(kind=8) dimension(30000) :: dthfr
            real(kind=8) dimension(30000) :: dbody
            real(kind=8) dimension(30000) :: dc0
            real(kind=8) dimension(30000) :: ds0
            real(kind=8) dimension(30000) :: ddc
            real(kind=8) dimension(30000) :: dds
        end module tidwave
        module love ! in :etpred:etpred.f90
            real(kind=8) dimension(12) :: dglat
            real(kind=8) dimension(12) :: dhlat
            real(kind=8) dimension(12) :: dklat
            real(kind=8) dimension(12) :: dllat
            real(kind=8) dimension(12) :: dtlat
            real(kind=8) :: dom0
            real(kind=8) :: domr
            real(kind=8) :: dgr
            real(kind=8) :: dhr
            real(kind=8) :: dkr
            real(kind=8) :: dlr
            real(kind=8) :: dtr
        end module love
        module inout ! in :etpred:etpred.f90
            use max_pars
            real(kind=8) dimension(18) :: argsin
            real(kind=8), allocatable,dimension(:,:) :: etpdata
            integer :: numwg
            real(kind=8) dimension(85) :: fqmin
            real(kind=8) dimension(85) :: fqmax
            real(kind=8) dimension(85) :: ampf
            real(kind=8) dimension(85) :: phasef
            real(kind=8) :: etd_start
            real(kind=8) :: etd_end
            integer :: fileprd
            integer :: fileprn
            integer :: scrout
            integer :: etpol_start
            integer :: etpol_end
            logical :: isinit
            character(len=25) dimension(6) :: header
            character(len=8) :: etpunit
            character(len=7), parameter,optional :: cproj='pygtide'
            character(len=32), parameter,optional :: vers='eterna predict v3.4 (10/02/2013)'
            character(len=10), parameter,optional :: fortvers='3.4 130210'
        end module inout
        subroutine init ! in :etpred:etpred.f90
            use params
            use ddt_mod
            use inout
        end subroutine init
        subroutine waves(freqfrom,freqto,ampfac,phasefac,n) ! in :etpred:etpred.f90
            use inout
            use max_pars
            real(kind=8) dimension(n),intent(in) :: freqfrom
            real(kind=8) dimension(n),intent(in),depend(n) :: freqto
            real(kind=8) dimension(n),intent(in),depend(n) :: ampfac
            real(kind=8) dimension(n),intent(in),depend(n) :: phasefac
            integer, optional,intent(in),check(shape(freqfrom, 0) == n),depend(freqfrom) :: n=shape(freqfrom, 0)
        end subroutine waves
        subroutine predict(args) ! in :etpred:etpred.f90
            use max_pars
            use params
            use ddt_mod
            use controlmod
            use tidwave
            use inout
            real(kind=8) dimension(18),intent(in) :: args
        end subroutine predict
        subroutine etastn(iun16,iprint,imodel,dlon,djuld,dut1,das,dasp,ddt) ! in :etpred:etpred.f90
            use params
            integer :: iun16
            integer :: iprint
            integer :: imodel
            real(kind=8) :: dlon
            real(kind=8) :: djuld
            real(kind=8) :: dut1
            real(kind=8) dimension(11) :: das
            real(kind=8) dimension(11) :: dasp
            real(kind=8) :: ddt
        end subroutine etastn
        subroutine etddta(iun16,iun27,iprint) ! in :etpred:etpred.f90
            use ddt_mod
            use params
            integer :: iun16
            integer :: iun27
            integer :: iprint
        end subroutine etddta
        subroutine etddtb(iun16,iprint,dtujd,ddt) ! in :etpred:etpred.f90
            use ddt_mod
            integer :: iun16
            integer :: iprint
            real(kind=8) :: dtujd
            real(kind=8) :: ddt
        end subroutine etddtb
        subroutine predin(iun16,iprint) ! in :etpred:etpred.f90
            use max_pars
            use controlmod
            use inout
            integer :: iun16
            integer :: iprint
        end subroutine predin
        subroutine etgcon(iun16,iprint,dlat,dlon,dh,dgrav,daz,ic,dgk,dpk) ! in :etpred:etpred.f90
            use love
            use params
            integer :: iun16
            integer :: iprint
            real(kind=8) :: dlat
            real(kind=8) :: dlon
            real(kind=8) :: dh
            real(kind=8) :: dgrav
            real(kind=8) :: daz
            integer :: ic
            real(kind=8) dimension(25) :: dgk
            real(kind=8) dimension(25) :: dpk
        end subroutine etgcon
        subroutine etgren(iun16,djuld,ity,itm,itd,dth,nerr) ! in :etpred:etpred.f90
            integer :: iun16
            real(kind=8) :: djuld
            integer :: ity
            integer :: itm
            integer :: itd
            real(kind=8) :: dth
            integer :: nerr
        end subroutine etgren
        subroutine etjuln(iun16,ity,itm,itd,dth,djuld) ! in :etpred:etpred.f90
            integer :: iun16
            integer :: ity
            integer :: itm
            integer :: itd
            real(kind=8) :: dth
            real(kind=8) :: djuld
        end subroutine etjuln
        subroutine etlegn(dct,dst,lmax,dp0,dp1) ! in :etpred:etpred.f90
            real(kind=8) :: dct
            real(kind=8) :: dst
            integer :: lmax
            real(kind=8) dimension(25) :: dp0
            real(kind=8) dimension(25) :: dp1
        end subroutine etlegn
        subroutine etlove(iun16,iprint,dlat,delv) ! in :etpred:etpred.f90
            use love
            use params
            integer :: iun16
            integer :: iprint
            real(kind=8) :: dlat
            real(kind=8) :: delv
        end subroutine etlove
        subroutine etphas(iun16,iprint,imodel,dlon,djuld) ! in :etpred:etpred.f90
            use params
            use tidphas
            use tidwave
            integer :: iun16
            integer :: iprint
            integer :: imodel
            real(kind=8) :: dlon
            real(kind=8) :: djuld
        end subroutine etphas
        subroutine interp_quadratic(dy1,dy2,dy3,dt,dout) ! in :etpred:etpred.f90
            real(kind=8) :: dy1
            real(kind=8) :: dy2
            real(kind=8) :: dy3
            real(kind=8) :: dt
            real(kind=8) :: dout
        end subroutine interp_quadratic
        subroutine interp(y0,y1,y2,y3,x0,dt,dout) ! in :etpred:etpred.f90
            real(kind=8) :: y0
            real(kind=8) :: y1
            real(kind=8) :: y2
            real(kind=8) :: y3
            real(kind=8) :: x0
            real(kind=8) :: dt
            real(kind=8) :: dout
        end subroutine interp
        subroutine interp_dif(dy0,dy1,dy2,dy3,dx0,dt,dout) ! in :etpred:etpred.f90
            real(kind=8) :: dy0
            real(kind=8) :: dy1
            real(kind=8) :: dy2
            real(kind=8) :: dy3
            real(kind=8) :: dx0
            real(kind=8) :: dt
            real(kind=8) :: dout
        end subroutine interp_dif
        subroutine etpolc(iun16,iun30,iun31,iprint,djuld,dclat,dslat,dclon,dslon,dpolx,dpoly,dut1,dtai,dlod,dgpol,dgpolp,dglod,nerr) ! in :etpred:etpred.f90
            use params
            integer :: iun16
            integer :: iun30
            integer :: iun31
            integer :: iprint
            real(kind=8) :: djuld
            real(kind=8) :: dclat
            real(kind=8) :: dslat
            real(kind=8) :: dclon
            real(kind=8) :: dslon
            real(kind=8) :: dpolx
            real(kind=8) :: dpoly
            real(kind=8) :: dut1
            real(kind=8) :: dtai
            real(kind=8) :: dlod
            real(kind=8) :: dgpol
            real(kind=8) :: dgpolp
            real(kind=8) :: dglod
            integer :: nerr
        end subroutine etpolc
        subroutine etpots(iun14,iun16,iun24,iprint,imodel,dlat,dlon,dh,dgrav,daz,ic,djuld,damin) ! in :etpred:etpred.f90
            use params
            use love
            use tidphas
            use tidwave
            integer :: iun14
            integer :: iun16
            integer :: iun24
            integer :: iprint
            integer :: imodel
            real(kind=8) :: dlat
            real(kind=8) :: dlon
            real(kind=8) :: dh
            real(kind=8) :: dgrav
            real(kind=8) :: daz
            integer :: ic
            real(kind=8) :: djuld
            real(kind=8) :: damin
        end subroutine etpots
    end interface 
end python module etpred

! This file was auto-generated with f2py (version:1.26.4).
! See:
! https://web.archive.org/web/20140822061353/http://cens.ioc.ee/projects/f2py2e
